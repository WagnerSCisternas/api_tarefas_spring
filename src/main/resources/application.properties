# Configurações Gerais da Aplicação
spring.application.name=tarefas-integrado
server.port=8080 # Padrão 8080, use a variável PORT para deploy em nuvem

# Configurações do Banco de Dados PostgreSQL (Local ou Nuvem via Variáveis de Ambiente)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update # 'update' para manter dados em deploy. Use 'create' para resetar o DB em dev.
spring.jpa.show-sql=true

# Configurações do H2 Console (APENAS PARA DESENVOLVIMENTO LOCAL!)
# Ative para testar o DB em memória se mudar as dependências e URL
spring.h2.console.enabled=false # Mantenha como false para deploy, ou true para dev local
# spring.h2.console.path=/h2-console # Caminho para o console H2

# Configurações JWT
jwt.secret=${JWT_SECRET:UmaChaveSecretaMuitoForteParaAssinarSeusTokensJWTQueNinguemVaiAdivinharERUmMinimoDeTrintaEDoisBytes}
jwt.expiration=36000000

# Configurações do Thymeleaf (Para o Frontend Web)
spring.thymeleaf.cache=false # Desabilita cache em desenvolvimento
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML

# SpringDoc OpenAPI (Swagger UI)
# Deixe comentado para deploy em produção para proteger os endpoints de documentação
# springdoc.swagger-ui.path=/swagger-ui.html
# springdoc.api-docs.path=/v3/api-docs