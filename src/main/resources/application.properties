# Configurações Gerais da Aplicação
spring.application.name=tarefas-integrado
server.port=${PORT:8080}

# Configurações do Banco de Dados PostgreSQL (Para Deploy em Nuvem como Render.com)
# As variáveis DATABASE_URL, DATABASE_USERNAME, DATABASE_PASSWORD, JWT_SECRET
# DEVEM ser configuradas como variáveis de ambiente no Render.com para o serviço da sua aplicação.
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Configurações JPA/Hibernate
spring.jpa.show-sql=false
# spring.jpa.hibernate.ddl-auto=create # Use este APENAS se quiser zerar o DB a cada deploy (NÃO RECOMENDADO EM PRODUÇÃO)

# Configurações do H2 Console (Desabilitado para deploy em produção)
spring.h2.console.enabled=false 

# Configurações JWT
jwt.secret=${JWT_SECRET}
jwt.expiration=36000000

spring.thymeleaf.cache=true
spring.thymeleaf.check-template-location=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML

# SpringDoc OpenAPI (Swagger UI)
# Recomendado desabilitar ou proteger em produção. Mantenha comentado para não expor.
springdoc.swagger-ui.enabled=false
springdoc.api-docs.enabled=false

# Exemplo de URL para o frontend poder consumir (para depuração LOCAL, mas no deploy será via variavel de ambiente)
# api.base.url=http://localhost:8080/api 
